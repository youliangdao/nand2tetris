// push constant
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// Condition JEQ
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=-1
@StackTest.vm.SKIP_EQ.0
D;JEQ
@SP
A=M
M=0
(StackTest.vm.SKIP_EQ.0)
@SP
M=M+1
// push constant
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// Condition JEQ
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=-1
@StackTest.vm.SKIP_EQ.1
D;JEQ
@SP
A=M
M=0
(StackTest.vm.SKIP_EQ.1)
@SP
M=M+1
// push constant
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// Condition JEQ
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=-1
@StackTest.vm.SKIP_EQ.2
D;JEQ
@SP
A=M
M=0
(StackTest.vm.SKIP_EQ.2)
@SP
M=M+1
// push constant
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// Condition JLT
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=-1
@StackTest.vm.SKIP_LT.0
D;JLT
@SP
A=M
M=0
(StackTest.vm.SKIP_LT.0)
@SP
M=M+1
// push constant
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// Condition JLT
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=-1
@StackTest.vm.SKIP_LT.1
D;JLT
@SP
A=M
M=0
(StackTest.vm.SKIP_LT.1)
@SP
M=M+1
// push constant
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// Condition JLT
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=-1
@StackTest.vm.SKIP_LT.2
D;JLT
@SP
A=M
M=0
(StackTest.vm.SKIP_LT.2)
@SP
M=M+1
// push constant
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// Condition JGT
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=-1
@StackTest.vm.SKIP_GT.0
D;JGT
@SP
A=M
M=0
(StackTest.vm.SKIP_GT.0)
@SP
M=M+1
// push constant
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// Condition JGT
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=-1
@StackTest.vm.SKIP_GT.1
D;JGT
@SP
A=M
M=0
(StackTest.vm.SKIP_GT.1)
@SP
M=M+1
// push constant
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// Condition JGT
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
D=M-D
@SP
A=M
M=-1
@StackTest.vm.SKIP_GT.2
D;JGT
@SP
A=M
M=0
(StackTest.vm.SKIP_GT.2)
@SP
M=M+1
// push constant
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
// BinaryOperation D+M
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=D+M
@SP
M=M+1
// push constant
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
// BinaryOperation M-D
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M-D
@SP
M=M+1
// UnaryOperation -M
@SP
M=M-1
A=M
M=-M
@SP
M=M+1
// BinaryOperation D&M
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=D&M
@SP
M=M+1
// push constant
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
// BinaryOperation D|M
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=D|M
@SP
M=M+1
// UnaryOperation !M
@SP
M=M-1
A=M
M=!M
@SP
M=M+1
