// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[6..8], a=la, b=lb, c=lc, d=ld, e=le, f=lf, g=lg, h=lh);

    RAM64(in=in, address=address[0..5], load=la, out=outa);
    RAM64(in=in, address=address[0..5], load=lb, out=outb);
    RAM64(in=in, address=address[0..5], load=lc, out=outc);
    RAM64(in=in, address=address[0..5], load=ld, out=outd);
    RAM64(in=in, address=address[0..5], load=le, out=oute);
    RAM64(in=in, address=address[0..5], load=lf, out=outf);
    RAM64(in=in, address=address[0..5], load=lg, out=outg);
    RAM64(in=in, address=address[0..5], load=lh, out=outh);

    Mux8Way16(a=outa, b=outb, c=outc, d=outd, e=oute, f=outf, g=outg, h=outh, sel=address[6..8], out=out);
}
