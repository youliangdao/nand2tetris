/** Fractionクラスの実装。  */
class Fraction{
    field int numerator, denominator;

    /** 与えられた分子と分母から新しい分数を生成する    */
    constructor Fraction new(int a, int b){
        let numerator = a;
        let denominator = b;
        do reduce();
        return this;
    }

    /** 分数を約分する  */
    method void reduce(){
        var int g;
        let g = Fraction.gcd(numerator, denominator);
        if (g > 1){
            let numerator = numerator / g;
            let denominator = denominator / g;
        }
        
        return;
    }

    /** aとbの最大公約数を求める    */
    function int gcd(int a, int b){
        var int r;
        while (~(b = 0)){
            let r = a - (b * (a / b));
            let a = b;
            let b = r;
        }
        return a;
    }

    /** アクセッサ  */
    method getNumerator(){ return numerator; }
    method getDenominator(){ return denominator; }

    /** この分数と他の分数との和を返す
    method Fraction plus(Fraction other){
        var int sum;
        let sum = (numerator * other.getDenominator()) + (other.getNumerator() * denominator);
        return Fraction.new(sum, denominator * other.getDenominator());
    }

    // メモリを破棄
    method void dispose(){
        Memory.deAlloc(this);
        return;
    }

    // 分数に関連した他のメソッド:  minus, times, divなど
    /** 分数の値を出力する  */
    method void print(){
        Output.printInt(numerator);
        Output.printString("/");
        Output.printInt(denominator);
        return;
    }
}